@using PaulsAutoParts.EntityLayer
@model PaulsAutoParts.ViewModelLayer.CustomerPaymentViewModel

@{
  ViewData["Title"] = "Your Orders/Payments";
}

@if (Model.IsFromCustomerMaintenance) {
  <h2>Orders for Customer: @Model.CustomerName (Cust ID: @Model.CustomerId)</h2>
}
else {
  <h2>Your Orders/Payments</h2>
}

@if (Model.DataCollection == null || Model.DataCollection.Count == 0) {
  @if (Model.IsFromCustomerMaintenance) {
    <p>This Customer Has Not Ordered Anything Yet</p>
  }
  else {
    <p>You Have Not Ordered Anything Yet</p>
  }
}
else {
  <div class="row">
    <div class="col">
      <p class="text-right">
        Records Found: @String.Format("{0:n0}", Model.TotalRecords)
      </p>
    </div>
  </div>
  <table class="table table-bordered table-hover table-striped">
    <thead>
      <tr>
        <th>Actions</th>
        <th>Order Number</th>
        <th>CC Type</th>
        <th>CC Auth</th>
        <th>Response</th>
        <th>Amount Paid</th>
      </tr>
    </thead>
    <tbody>
      @foreach (CustomerPayment item in Model.DataCollection) {
        <tr>
          <td>
            <a class="btn btn-info" asp-action="ViewDetail" asp-route-id="@item.OrderHeaderId">View Detail</a>
          </td>
          <td>@Html.DisplayFor(m => item.OrderHeaderId)</td>
          <td>@Html.DisplayFor(m => item.CCType)</td>
          <td>@Html.DisplayFor(m => item.CCAuth)</td>
          <td>@Html.DisplayFor(m => item.Response)</td>
          <td>@Html.DisplayFor(m => item.AmountPaid)</td>
        </tr>
        @if (Model.OrderInformation.OrderHeaderId.HasValue && Model.OrderInformation.OrderHeaderId == item.OrderHeaderId) {
          <partial name="_CustomerOrders" />
        }
      }
    </tbody>
    <tfoot>
      <tr>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td><strong>Total Spent</strong></td>
        <td><strong>@Model.TotalSpent.ToString("c")</strong></td>
      </tr>
    </tfoot>
  </table>
}

@section Scripts
{
  <partial name="_ValidationScriptsPartial" />
}

@using PaulsAutoParts.EntityLayer
@model PaulsAutoParts.ViewModelLayer.CheckOutViewModel

@{
    ViewData["Title"] = "CheckOut";
}

<div class="text-center">
    <h1 class="display-4">Enter Payment Information</h1>
</div>

<div class="row">
    <div class="col">
        <p>Total To Pay: <strong>@Model.Cart.TotalCart.ToString("c")</strong></p>
    </div>
</div>

<form method="post" asp-action="ProcessCreditCard"
      data-waitmsg="Please wait while processing credit card...<br />
Please don't refresh this page or click on the back button.<br />">

  <div class="row">
    <div class="col">
      <div asp-validation-summary="All" class="text-danger">
      </div>
    </div>
  </div>

  <div class="row">
    <div class="form-group col-sm-6">
      <label asp-for="CustomerCreditCard.CardType"></label>
      <select class="form-control"
              asp-for="CustomerCreditCard.CardType"
              asp-items="@(new SelectList(Model.CardTypes))">
      </select>
    </div>
  </div>
  <div class="form-group">
    <label asp-for="CustomerCreditCard.NameOnCard"></label>
    <input asp-for="CustomerCreditCard.NameOnCard" class="form-control" />
    <span asp-validation-for="CustomerCreditCard.NameOnCard" class="text-danger" />
  </div>
  <div class="row">
    <div class="form-group col-sm-8">
      <label asp-for="CustomerCreditCard.CardNumber"></label>
      <input asp-for="CustomerCreditCard.CardNumber" class="form-control" />
      <span asp-validation-for="CustomerCreditCard.CardNumber" class="text-danger" />
    </div>
    <div class="form-group col-sm-4">
      <label asp-for="CustomerCreditCard.SecurityCode"></label>
      <input asp-for="CustomerCreditCard.SecurityCode" class="form-control" />
      <span asp-validation-for="CustomerCreditCard.SecurityCode" class="text-danger" />
    </div>
  </div>
  <div class="row">
    <div class="form-group col-sm-8">
      <label asp-for="CustomerCreditCard.ExpMonth"></label>
      <select class="form-control"
              asp-for="CustomerCreditCard.ExpMonth"
              asp-items="@(new SelectList(Model.Months, "MonthNumber", "MonthNameForDisplay"))">
      </select>
    </div>
    <div class="form-group col-sm-4">
      <label asp-for="CustomerCreditCard.ExpYear"></label>
      <select class="form-control"
              asp-for="CustomerCreditCard.ExpYear"
              asp-items="@(new SelectList(Model.Years))">
      </select>
    </div>
  </div>
  <div class="row">
    <div class="form-group col-sm-4">
      <label asp-for="CustomerCreditCard.BillingPostalCode"></label>
      <input asp-for="CustomerCreditCard.BillingPostalCode" class="form-control" />
      <span asp-validation-for="CustomerCreditCard.BillingPostalCode" class="text-danger" />
    </div>
  </div>

  <div class="form-group">
    <button class="btn btn-primary">Submit Payment</button>
    <a class="btn btn-secondary" formnovalidate="formnovalidate" asp-action="Index" asp-controller="ShoppingCart">
      Cancel
    </a>
  </div>
</form>

<div class="row">
    <div class="col text-center">
        <span><strong>@Model.Message</strong></span>
    </div>
</div>

@section Scripts
    {
    <script>
        'use strict';

        let pageController = (function () {
            function isMonthYearValid(month, year) {
                let ret = true;
                let currentMonth = new Date().getMonth() + 1;

                // Only check month, if the current year has been selected
                if (year == new Date().getFullYear()) {
                    ret = month >= currentMonth;
                }
                return ret;
            }

            function addValidationRules() {
                $.validator.addMethod("checkexpmonth",
                    function (value, element) {
                        let ret = isMonthYearValid(parseInt(value),
                            $("#CustomerCreditCard_ExpYear").val());

                        return ret;
                    });

                $.validator.addMethod("checkexpyear",
                    function (value, element) {
                        let ret = isMonthYearValid(
                            $("#CustomerCreditCard_ExpMonth").val(), parseInt(value));

                        return ret;
                    });

                $("form").validate({
                    rules: {
                        "CustomerCreditCard.ExpMonth": {
                            required: true, checkexpmonth: {
                                depends: function (element) {
                                    // After checking the month, always check the year too
                                    return $("form").validate().element(
                                        "#CustomerCreditCard_ExpYear");
                                }
                            }
                        },
                        "CustomerCreditCard.ExpYear": {
                            required: true,
                            checkexpyear: true
                        }
                    },
                    messages: {
                        "CustomerCreditCard.ExpMonth": {
                            checkexpmonth: "Expiration Month/Year Must Be Greater Than or Equal to The Current Month/ Year"
                        },
                        "CustomerCreditCard.ExpYear": {
                            checkexpyear: "Expiration Month/Year Must Be Greater Than or Equal to The Current Month/ Year"
                        }
                    },
                    errorPlacement: function (error, element) {
                        if (element.attr("name") == "CustomerCreditCard.ExpMonth" ||
                            element.attr("name") == "CustomerCreditCard.ExpYear")
                            error.insertAfter("#CustomerCreditCard_ExpMonth");
                        else
                            error.insertAfter(element);
                    }
                });

            }

            // Expose public functions from closure
            return {
                "addValidationRules": addValidationRules
            }
        })();


        $(document).ready(function () {
            // Add jQuery validation rules
            pageController.addValidationRules();

            // Setup the form submit
            mainController.formSubmit();
        });

    </script>
    <partial name="_ValidationScriptsPartial" />
}
